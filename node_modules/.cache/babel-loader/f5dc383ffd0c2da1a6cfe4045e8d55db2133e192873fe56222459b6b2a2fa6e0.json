{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Downloads\\\\WebApplication1\\\\src\\\\pages\\\\InventoryPg.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport InventoryList from \"../components/InventoryList\";\nimport Filter from \"../components/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryPg = () => {\n  _s();\n  // Setup State Hooks\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  // Read JSON data\n  useEffect(() => {\n    fetch('/data/mock_vinyls.json').then(res => res.json()).then(data => {\n      setProducts(data);\n      setFilteredProducts(data);\n      setProducts(data);\n      setCategories([...new Set(data.map(p => p.artist))]);\n    }).catch(err => console.error(err));\n  }, []);\n  // handle change in \n  const HandleCategoryChange = selectedCategory => {\n    if (selectedCategory === '') {\n      setFilteredProducts(products);\n    } else {\n      const filtered = products.filter(p => p.artist === selectedCategory);\n      setFilteredProducts(filtered);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory-pg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      categories: categories,\n      onSelectCategory: HandleCategoryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InventoryList, {\n      products: filteredProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryPg, \"1O4EcpZclejW0Oc9muI/DACrLUA=\");\n_c = InventoryPg;\nexport default InventoryPg;\nvar _c;\n$RefreshReg$(_c, \"InventoryPg\");","map":{"version":3,"names":["useState","useEffect","InventoryList","Filter","jsxDEV","_jsxDEV","InventoryPg","_s","products","setProducts","filteredProducts","setFilteredProducts","categories","setCategories","fetch","then","res","json","data","Set","map","p","artist","catch","err","console","error","HandleCategoryChange","selectedCategory","filtered","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","_c","$RefreshReg$"],"sources":["C:/Users/micha/Downloads/WebApplication1/src/pages/InventoryPg.js"],"sourcesContent":["import { useState, useEffect } from 'react'; \r\nimport InventoryList from \"../components/InventoryList\";\r\nimport Filter from \"../components/Filter\";\r\nconst InventoryPg = () => {\r\n  // Setup State Hooks\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  // Read JSON data\r\n  useEffect(() => {\r\n    fetch('/data/mock_vinyls.json')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setProducts(data);\r\n      setFilteredProducts(data);\r\n      setProducts(data);\r\n      setCategories([...new Set(data.map(p => p.artist))])\r\n    })\r\n    .catch(err => console.error(err));\r\n  }, []);\r\n  // handle change in \r\n  const HandleCategoryChange = (selectedCategory) => {\r\n    if (selectedCategory === '') {\r\n      setFilteredProducts(products);\r\n    } else {\r\n      const filtered = products.filter(p => p.artist === selectedCategory);\r\n      setFilteredProducts(filtered);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inventory-pg\">\r\n      <h1>Inventory Page</h1>\r\n      {/* <InventoryList /> */}\r\n      <Filter categories={categories} onSelectCategory={HandleCategoryChange}/>\r\n      <InventoryList products={filteredProducts}/>\r\n    </div>\r\n  );\r\n};\r\nexport default InventoryPg;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,wBAAwB,CAAC,CAC9BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZT,WAAW,CAACS,IAAI,CAAC;MACjBP,mBAAmB,CAACO,IAAI,CAAC;MACzBT,WAAW,CAACS,IAAI,CAAC;MACjBL,aAAa,CAAC,CAAC,GAAG,IAAIM,GAAG,CAACD,IAAI,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMG,oBAAoB,GAAIC,gBAAgB,IAAK;IACjD,IAAIA,gBAAgB,KAAK,EAAE,EAAE;MAC3BjB,mBAAmB,CAACH,QAAQ,CAAC;IAC/B,CAAC,MAAM;MACL,MAAMqB,QAAQ,GAAGrB,QAAQ,CAACsB,MAAM,CAACT,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKM,gBAAgB,CAAC;MACpEjB,mBAAmB,CAACkB,QAAQ,CAAC;IAC/B;EACF,CAAC;EAED,oBACExB,OAAA;IAAK0B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvB/B,OAAA,CAACF,MAAM;MAACS,UAAU,EAAEA,UAAW;MAACyB,gBAAgB,EAAEV;IAAqB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzE/B,OAAA,CAACH,aAAa;MAACM,QAAQ,EAAEE;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApCID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}