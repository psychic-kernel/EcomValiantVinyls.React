{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Downloads\\\\WebApplication1\\\\src\\\\components\\\\InventoryList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n\n/**\r\n * artist\r\n * album\r\n * genre\r\n * release_date\r\n * label\r\n * price\r\n * tracklist\r\n * cover_image\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryList = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch and parse JSON data when the component mounts\n    fetch(\"/data/mock_vinyls.json\") // Note: This path is relative to the public directory in CodeSandbox\n    .then(response => response.json()).then(jsonData => {\n      console.log(jsonData);\n      setData(jsonData);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inventory-list\",\n        grid: grid,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.cover_image,\n          alt: \"Album artwork\",\n          style: {\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"artist\",\n          children: [\"Artist: \", item.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"album\",\n          children: [\"Album: \", item.album]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"genre\",\n          children: [\"Genre: \", item.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"releaseDate\",\n          children: [\"Release Date: \", item.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"label\",\n          children: [\"Label: \", item.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"price\",\n          children: [\"Price: \", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"tracklist\",\n          children: [\"Tracklist: \", item.tracklist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = InventoryList;\nexport default InventoryList;\nvar _c;\n$RefreshReg$(_c, \"InventoryList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","InventoryList","_s","data","setData","fetch","then","response","json","jsonData","console","log","catch","error","children","map","item","className","grid","src","cover_image","alt","style","width","fileName","_jsxFileName","lineNumber","columnNumber","id","artist","album","genre","release_date","label","price","tracklist","_c","$RefreshReg$"],"sources":["C:/Users/micha/Downloads/WebApplication1/src/components/InventoryList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * artist\r\n * album\r\n * genre\r\n * release_date\r\n * label\r\n * price\r\n * tracklist\r\n * cover_image\r\n */\r\n\r\nconst InventoryList = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch and parse JSON data when the component mounts\r\n    fetch(\"/data/mock_vinyls.json\") // Note: This path is relative to the public directory in CodeSandbox\r\n      .then((response) => response.json())\r\n      .then((jsonData) => {\r\n        console.log(jsonData);\r\n        setData(jsonData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {data.map((item) => (\r\n          <div key={item.id} className=\"inventory-list\"\r\n          grid={grid}>\r\n            <img src={item.cover_image} alt=\"Album artwork\" style={{ width: 300}}/>\r\n            <br />\r\n            <p id=\"artist\">Artist: {item.artist}</p>\r\n            <p id=\"album\">Album: {item.album}</p>\r\n            <p id=\"genre\">Genre: {item.genre}</p>\r\n            <p id=\"releaseDate\">Release Date: {item.release_date}</p>\r\n            <p id=\"label\">Label: {item.label}</p>\r\n            <p id=\"price\">Price: {item.price}</p>\r\n            <p id=\"tracklist\">Tracklist: {item.tracklist}</p>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default InventoryList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}