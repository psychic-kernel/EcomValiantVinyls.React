{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Downloads\\\\WebApplication1\\\\src\\\\components\\\\InventoryList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n\n//Components\nimport Filters from \"./Filters\";\n/**\r\n * artist\r\n * album\r\n * genre\r\n * release_date\r\n * label\r\n * price\r\n * tracklist\r\n * cover_image\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryList = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch and parse JSON data when the component mounts\n    fetch(\"/data/mock_vinyls.json\") // Note: This path is relative to the public directory in CodeSandbox\n    .then(response => response.json()).then(jsonData => {\n      console.log(jsonData);\n      setData(jsonData);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); //empty dependency array ensures that this effect runs once when the component mounts.\n\n  // Define filter criteria\n  const FilterData = () => {\n    const genre = data.filter(i => i.genre === 'jazz');\n    setFilteredData(genre);\n  };\n  // call filterData function when componet is renered.\n  useEffect(() => {\n    FilterData();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inventory-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.cover_image,\n          alt: \"Album artwork\",\n          style: {\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"artist\",\n          children: [\"Artist: \", item.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"album\",\n          children: [\"Album: \", item.album_title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"genre\",\n          children: [\"Genre: \", item.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"releaseDate\",\n          children: [\"Release Date: \", item.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"label\",\n          children: [\"Label: \", item.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"price\",\n          children: [\"Price: \", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"tracklist\",\n          children: [\"Tracklist: \", item.tracklist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryList, \"MNW7rnkI9oNPb711ySWHHHkbM9Y=\");\n_c = InventoryList;\nexport default InventoryList;\nvar _c;\n$RefreshReg$(_c, \"InventoryList\");","map":{"version":3,"names":["useState","useEffect","Filters","jsxDEV","_jsxDEV","InventoryList","_s","data","setData","fetch","then","response","json","jsonData","console","log","catch","error","FilterData","genre","filter","i","setFilteredData","children","map","item","className","src","cover_image","alt","style","width","fileName","_jsxFileName","lineNumber","columnNumber","id","artist","album_title","release_date","label","price","tracklist","_c","$RefreshReg$"],"sources":["C:/Users/micha/Downloads/WebApplication1/src/components/InventoryList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n//Components\r\nimport Filters from \"./Filters\";\r\n/**\r\n * artist\r\n * album\r\n * genre\r\n * release_date\r\n * label\r\n * price\r\n * tracklist\r\n * cover_image\r\n */\r\n\r\nconst InventoryList = () => {\r\n  const [data, setData] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    // Fetch and parse JSON data when the component mounts\r\n    fetch(\"/data/mock_vinyls.json\") // Note: This path is relative to the public directory in CodeSandbox\r\n      .then((response) => response.json())\r\n      .then((jsonData) => {\r\n        console.log(jsonData);\r\n        setData(jsonData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []); //empty dependency array ensures that this effect runs once when the component mounts.\r\n\r\n  // Define filter criteria\r\n  const FilterData = () => {\r\n    const genre = data.filter(i => i.genre === 'jazz');\r\n    setFilteredData(genre);\r\n  };\r\n  // call filterData function when componet is renered.\r\n  useEffect(() => {\r\n    FilterData();\r\n  },[data])\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {data.map((item) => (\r\n          <div key={item.id} className=\"inventory-list\">\r\n            <img src={item.cover_image} alt=\"Album artwork\" style={{ width: 300}}/>\r\n            <br />\r\n            <p id=\"artist\">Artist: {item.artist}</p>\r\n            <p id=\"album\">Album: {item.album_title}</p>\r\n            <p id=\"genre\">Genre: {item.genre}</p>\r\n            <p id=\"releaseDate\">Release Date: {item.release_date}</p>\r\n            <p id=\"label\">Label: {item.label}</p>\r\n            <p id=\"price\">Price: {item.price}</p>\r\n            <p id=\"tracklist\">Tracklist: {item.tracklist}</p>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default InventoryList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}