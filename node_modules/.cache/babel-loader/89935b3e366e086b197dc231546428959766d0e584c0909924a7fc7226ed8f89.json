{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Downloads\\\\WebApplication1\\\\src\\\\components\\\\Filter.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = _ref => {\n  _s();\n  let {\n    selectedArtist,\n    selectedGenre,\n    selectedReleaseDate,\n    selectedLabel,\n    handleSelectedArtist,\n    handleSelectedGenre,\n    handleSelectedReleaseDate,\n    handleSelectedLabel,\n    filteredRecs\n  } = _ref;\n  useEffect(() => {\n    fetch('/data/mock_vinyls.json').then(res => res.json()).then(data => {\n      setRecords(data);\n      setCategories([...new Set(data.map(d => d.artist))]);\n    }).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Artist:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedArtist,\n      onChange: handleArtistChange,\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Artists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Genre:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedGenre,\n      onChange: handleGenreChange,\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: filterSongs,\n      children: \"Apply Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Filter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["Filter","_ref","_s","selectedArtist","selectedGenre","selectedReleaseDate","selectedLabel","handleSelectedArtist","handleSelectedGenre","handleSelectedReleaseDate","handleSelectedLabel","filteredRecs","useEffect","fetch","then","res","json","data","setRecords","setCategories","Set","map","d","artist","catch","err","console","error","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","handleArtistChange","handleGenreChange","onClick","filterSongs","_c","$RefreshReg$"],"sources":["C:/Users/micha/Downloads/WebApplication1/src/components/Filter.js"],"sourcesContent":["\r\n\r\nconst Filter = ({\r\n    selectedArtist,\r\n    selectedGenre,\r\n    selectedReleaseDate,\r\n    selectedLabel,\r\n\r\n    handleSelectedArtist,\r\n    handleSelectedGenre,\r\n    handleSelectedReleaseDate,\r\n    handleSelectedLabel,\r\n\r\n    filteredRecs\r\n}) => {\r\n    \r\n    useEffect(() => {\r\n        fetch('/data/mock_vinyls.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setRecords(data);\r\n            setCategories([...new Set(data.map(d => d.artist))])\r\n        })\r\n        .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n          <label>Artist:</label>\r\n          <select value={selectedArtist} onChange={handleArtistChange}>\r\n            <option value=\"\">All Artists</option>\r\n            {/* Add options dynamically based on your data */}\r\n\r\n          </select>\r\n    \r\n          <label>Genre:</label>\r\n          <select value={selectedGenre} onChange={handleGenreChange}>\r\n            <option value=\"\">All Genres</option>\r\n            {/* Add options dynamically based on your data */}\r\n          </select>\r\n    \r\n          <button onClick={filterSongs}>Apply Filters</button>\r\n        </div>\r\n      );\r\n}\r\n\r\n\r\n"],"mappings":";;;AAEA,MAAMA,MAAM,GAAGC,IAAA,IAYT;EAAAC,EAAA;EAAA,IAZU;IACZC,cAAc;IACdC,aAAa;IACbC,mBAAmB;IACnBC,aAAa;IAEbC,oBAAoB;IACpBC,mBAAmB;IACnBC,yBAAyB;IACzBC,mBAAmB;IAEnBC;EACJ,CAAC,GAAAV,IAAA;EAEGW,SAAS,CAAC,MAAM;IACZC,KAAK,CAAC,wBAAwB,CAAC,CAC9BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVC,UAAU,CAACD,IAAI,CAAC;MAChBE,aAAa,CAAC,CAAC,GAAG,IAAIC,GAAG,CAACH,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIG,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAO;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtBL,OAAA;MAAQM,KAAK,EAAE/B,cAAe;MAACgC,QAAQ,EAAEC,kBAAmB;MAAAP,QAAA,eAC1DD,OAAA;QAAQM,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG/B,CAAC,eAETL,OAAA;MAAAC,QAAA,EAAO;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrBL,OAAA;MAAQM,KAAK,EAAE9B,aAAc;MAAC+B,QAAQ,EAAEE,iBAAkB;MAAAR,QAAA,eACxDD,OAAA;QAAQM,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9B,CAAC,eAETL,OAAA;MAAQU,OAAO,EAAEC,WAAY;MAAAV,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAA/B,EAAA,CA1CKF,MAAM;AAAAwC,EAAA,GAANxC,MAAM;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}